map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    server_name ${NGINX_HOST};

    return 301 https://${NGINX_HOST}$request_uri;
}

server {
    listen ${NGINX_PORT} ssl http2;
    server_name ${NGINX_HOST};

    ssl_certificate /etc/nginx/certs/${NGINX_CERT_CRT};
    ssl_certificate_key /etc/nginx/certs/${NGINX_CERT_KEY};

    root ${API_DIRECTORY}/public;

    location /ws-server {
        proxy_pass http://api:9999;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /api {
        proxy_pass http://api:5000;
        try_files $uri /index.php$is_args$args;
        root ${API_DIRECTORY}/public;
    }

    location /img {
        alias ${API_DIRECTORY}/public/img;
        add_header Cache-Control "private, must-revalidate, max-age=3153600";
    }

    location / {
        proxy_pass http://frontend:3000;
        root ${FRONTEND_DIRECTORY}/public;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        add_header Cache-Control "private, must-revalidate, max-age=3153600";
    }

    location ~ ^/(/|static/|images/|javascript/|js/|css/|dist/|media/|locales/|logo192.png|robots.txt|favicon.ico|manifest.json|.+\.hot-update.js) {
       proxy_pass http://frontend:3000;
       root ${FRONTEND_DIRECTORY}/public;
       access_log off;
       add_header Cache-Control no-cache;
       expires 1s;
    }

    location ~ \.php$ {
        try_files $uri /index.php$is_args$args;
        fastcgi_pass api:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        internal;
    }

    location ~* .+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|js|tar|wav|bmp|rtf|mp4|svg|svgz})$ {
        root ${API_DIRECTORY}/public;
        add_header Cache-Control "private, max-age=3153600";
    }
}

server {
    listen 13306 ssl;
    server_name ${NGINX_HOST};

    ssl_certificate /etc/nginx/certs/${NGINX_CERT_CRT};
    ssl_certificate_key /etc/nginx/certs/${NGINX_CERT_KEY};

    location / {
        proxy_pass http://mysql:13306;
    }
}
